{"version":3,"sources":["static/images/SpiralLogo.jpg","static/images/PayDay.jpg","static/images/children-learn-to-make-friends.jpg","styledConstants.js","components/Button.js","components/Input.js","components/Form.js","components/Spinner.js","components/LoginPage/index.js","store/actions.js","store/types.js","components/Greeting.js","components/Image.js","components/Card.js","hooks/useApi.js","services/mocks.js","services/util.js","services/api.js","components/HomePage/AccountOverviewCard.js","components/HomePage/GivingImpactCard.js","components/HomePage/RecentTransactionsCard.js","components/HomePage/PayDayCard.js","components/HomePage/UpcomingBigPaymentsCard.js","components/HomePage/QuoteOfTheDay.js","components/HomePage/index.js","components/NotImplemented.js","components/Header.js","components/Link.js","components/NavPanel.js","components/AccountsPage/index.js","components/CheckingPage/index.js","components/PrivateRoute.js","components/Layout.js","App.js","serviceWorker.js","store/reducers/authorisation.js","store/reducers/router.js","store/reducers/index.js","store/sagas/user.js","store/sagas/index.js","store/store.js","index.js"],"names":["module","exports","mainColor","greenColor","greyColor","Button","styled","button","props","color","backgroundColor","Input","input","attrs","placeholder","PasswordInput","type","Form","form","StyledLabel","label","Label","title","children","className","circleFadeDelay","keyframes","Spinner","StyledLoginPage","div","LoginPage","useState","login","password","set","history","useHistory","dispatch","useDispatch","useSelector","state","authorisation","loggingIn","loggedIn","useEffect","push","value","onChange","target","disabled","onClick","e","preventDefault","logIn","length","dateConfig","month","day","year","Greeting","userName","date","Date","hours","getHours","message","toLocaleString","Image","circle","borderColor","imageUrl","width","height","Card","StyledCardInfo","fontColor","CardInfo","imageNode","subtitle","image","rest","CardList","CardMedia","CardContent","centered","CardDescription","p","CardFooter","CardSubstrate","CardProperty","useApi","fetchApi","data","isLoading","setData","then","accounts","id","uuid","name","count","ssi","user","avatar","chekingTransactions","balance","transactions","amount","payDay","employerName","emulateServerResponse","Promise","resolve","min","max","Math","ceil","floor","time","random","res","setTimeout","currencyFormat","number","currency","locale","style","apiSevice","Error","days","map","StyledAccountOverviewCard","Arrow","span","AccountOverviewCard","fetchAccounts","balances","totalCash","reduce","sum","key","toLowerCase","GivingImpactCard","backgroundImage","description","logo","RecentTransactionsCard","GreenText","PayDayCard","fetchPayDay","PayDayPic","UpcomingBigPaymentsCard","payments","Quote","h3","Author","QuoteOfTheDay","quote","author","CardsDashboard","StyledHomePage","HomePage","background","StyledNotImplementedPage","NotImplementedPage","goBack","StyledHeader","header","Header","src","spiralLogo","alt","Link","NavLink","StyledNavPanel","nav","NavPanel","to","StyledAccountsPage","StyledSSI","SSI","AccountsPage","StyledTransactionsCard","HighlightedSubstr","HighlightedSubstring","string","regExp","matchedSubstrings","Array","from","matchAll","test","caret","arr","matched","part","concat","substring","index","TransactionsCard","filteredTransactions","filter","i","match","options","dateFormat","StyledCheckingPage","CheckingPage","search","setSearch","fetchChekingTransactions","searchString","replace","RegExp","valueOf","PrivateRoute","redirectTo","store","StyledLayout","Layout","path","exact","App","Boolean","window","location","hostname","JSON","parse","localStorage","getItem","initialUser","createBrowserHistory","connectRouter","combineReducers","router","logOut","takeLatest","call","setItem","stringify","put","removeItem","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","run","GlogalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e188bb28.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SpiralLogo.bfaaa656.jpg\";","module.exports = __webpack_public_path__ + \"static/media/PayDay.de491442.jpg\";","module.exports = __webpack_public_path__ + \"static/media/children-learn-to-make-friends.8029474f.jpg\";","export const charcoalGrey = 'rgb(51, 56, 61)';\r\nexport const darkPink = 'rgb(216, 50, 117)';\r\nexport const darkSeaGreen = 'rgb(14, 153, 77)';\r\nexport const darkMintGreen = 'rgb(28, 189, 102)';\r\nexport const blueyGrey = 'rgb(141, 149, 157)';\r\nexport const brownishGrey = 'rgb(110, 110, 110)';\r\n\r\nexport const mainColor = darkPink;//'#d83275';\r\nexport const backgroundColor = '#f7f8fb';\r\nexport const greenColor = darkSeaGreen;// '#0e994d';\r\nexport const greyColor = blueyGrey;//'#aaa';\r\nexport const lightGreyColor = '#eaedf4';","import styled from 'styled-components';\r\nimport { mainColor } from \"../styledConstants\";\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  line-height: 16px;\r\n  height: 36px;\r\n  border: 1px solid ${props => props.color || mainColor};\r\n  color: ${props => props.color || mainColor};\r\n  background-color: ${props => props.backgroundColor || 'transparent'};\r\n  transition: color 250ms, background-color 250ms;\r\n  &:hover:not(:disabled) {\r\n    background-color: ${props => props.color || mainColor};\r\n    color: white;\r\n  }\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n`;","import styled from 'styled-components';\r\nimport { mainColor, greyColor } from \"../styledConstants\";\r\n\r\nexport const Input = styled.input.attrs(props => ({\r\n  placeholder: props.placeholder\r\n}))`\r\n  padding: 5px 20px;\r\n  border-radius: 20px;\r\n  line-height: 1.4;\r\n  box-sizing: border-box;\r\n  border: 1px solid ${greyColor};\r\n  color: ${props => props.color || mainColor};\r\n  background-color: transparent;\r\n  transition: border-bottom-color 250ms;\r\n  &:focus:not(:disabled) {\r\n    border-color: ${props => props.color || mainColor};\r\n  }\r\n  &:placeholder {\r\n    color: ${greyColor};\r\n  }\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport const PasswordInput = styled(Input).attrs({ type: 'password' })``;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { greyColor } from \"../styledConstants\";\r\nimport { Input } from \"./Input\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  & > * {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  .title {\r\n    font-size: 24px;\r\n    margin: 5px 0;\r\n  }\r\n  ${Input} {\r\n    padding: 10px 0;\r\n    width: 100%;\r\n    border: 0;\r\n    border-bottom: 1px solid ${greyColor};\r\n    border-radius: 0;\r\n  }\r\n`;\r\n\r\nexport function Label({ title, children }) {\r\n  return (\r\n    <StyledLabel>\r\n      <div className=\"title\">{title}</div>\r\n      {children}\r\n    </StyledLabel>\r\n  )\r\n} \r\n","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { mainColor } from '../styledConstants';\r\n\r\nconst circleFadeDelay = keyframes`\r\n  0%, 39%, 100% { opacity: 0; }\r\n  40% { opacity: 1; } \r\n`;\r\n\r\nexport const Spinner = styled(SpinnerComponent)`\r\n  & {\r\n    margin: 100px auto;\r\n    width: 50px;\r\n    height: 50px;\r\n    position: relative;\r\n\r\n    div {\r\n      width: 100%;\r\n      height: 100%;\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      &:before {\r\n        content: '';\r\n        display: block;\r\n        margin: 0 auto;\r\n        width: 15%;\r\n        height: 15%;\r\n        background-color: ${({ color }) => color || mainColor};\r\n        border-radius: 100%;\r\n        animation: ${circleFadeDelay} 1.2s infinite ease-in-out both;\r\n      }\r\n    }\r\n\r\n    div:nth-child(2) {\r\n      transform: rotate(30deg);\r\n      &:before {\r\n        animation-delay: -1.1s; \r\n      }\r\n    }\r\n    div:nth-child(3) {\r\n      transform: rotate(60deg);\r\n      &:before {\r\n        animation-delay: -1s; \r\n      }\r\n    }\r\n    div:nth-child(4) {\r\n      transform: rotate(90deg);\r\n      &:before {\r\n        animation-delay: -0.9s; \r\n      }\r\n    }\r\n    div:nth-child(5) {\r\n      transform: rotate(120deg);\r\n      &:before {\r\n        animation-delay: -0.8s; \r\n      }\r\n    }\r\n    div:nth-child(6) {\r\n      transform: rotate(150deg);\r\n      &:before {\r\n        animation-delay: -0.7s; \r\n      }\r\n    }\r\n    div:nth-child(7) {\r\n      transform: rotate(180deg);\r\n      &:before {\r\n        animation-delay: -0.6s; \r\n      }\r\n    }\r\n    div:nth-child(8) {\r\n      transform: rotate(210deg);\r\n      &:before {\r\n        animation-delay: -0.5s; \r\n      }\r\n    }\r\n    div:nth-child(9) {\r\n      transform: rotate(240deg);\r\n      &:before {\r\n        animation-delay: -0.4s; \r\n      }\r\n    }\r\n    div:nth-child(10) {\r\n      transform: rotate(270deg);\r\n      &:before {\r\n        animation-delay: -0.3s; \r\n      }\r\n    }\r\n    div:nth-child(11) {\r\n      transform: rotate(300deg);\r\n      &:before {\r\n        animation-delay: -0.2s; \r\n      }\r\n    }\r\n    div:nth-child(12) {\r\n      transform: rotate(330deg); \r\n      &:before {\r\n        animation-delay: -0.1s; \r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function SpinnerComponent(props) {\r\n  return (\r\n    <div {...props}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Button } from \"../Button\";\r\nimport { mainColor } from \"../../styledConstants\";\r\nimport { Input, PasswordInput } from \"../Input\";\r\nimport { Form, Label } from \"../Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logIn } from \"../../store/actions\";\r\nimport { Spinner } from \"../Spinner\";\r\n\r\nconst StyledLoginPage = styled.div`\r\n  padding: 50px;\r\n  .login-wrapper {\r\n    margin: 0 auto;\r\n    max-width: 500px;\r\n    .loginTitle {\r\n      display: inline-block;\r\n      font-weight: bold;\r\n      font-size: 26px;\r\n      border-bottom: 2px solid ${mainColor};\r\n    }\r\n    .loginForm {\r\n      position: relative;\r\n      margin: 100px 0;\r\n      ${Spinner} {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n      }\r\n    }\r\n    ${Button} {\r\n      margin-top: 100px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport function LoginPage() {\r\n  const [{ login, password }, set] = useState({ login: '', password: '' });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const { loggingIn, loggedIn } = useSelector(state => state.authorisation);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      history.push('/home');\r\n    }\r\n  });\r\n\r\n  return (\r\n    <StyledLoginPage>\r\n      <div className=\"login-wrapper\">\r\n        <h2 className=\"loginTitle\">\r\n          Login\r\n        </h2>\r\n        <Form className=\"loginForm\">\r\n          <Label title=\"Login\">\r\n            <Input\r\n              value={login}\r\n              onChange={({ target: { value } }) => set({ login: value, password })}\r\n              placeholder=\"Your email address\"\r\n              disabled={loggingIn}\r\n            />\r\n          </Label>\r\n          <Label title=\"Password\">\r\n            <PasswordInput\r\n              value={password}\r\n              onChange={({ target: { value } }) => set({ login, password: value })}\r\n              placeholder=\"Password\"\r\n              disabled={loggingIn}\r\n            />\r\n          </Label>\r\n          <Button\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              set({ login: '', password: '' });\r\n              dispatch(logIn(login, password));\r\n            }}\r\n            disabled={login.length < 4 || password.length < 4 || loggingIn}\r\n          >LOGIN</Button>\r\n          {loggingIn && <Spinner />}\r\n        </Form>\r\n      </div>\r\n    </StyledLoginPage>\r\n  )\r\n}","import {\r\n  LOGIN_REQUESTED,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nexport const logIn = (login, password) => ({\r\n  type: LOGIN_REQUESTED,\r\n  login,\r\n  password\r\n});\r\n\r\nexport const logOut = () => ({\r\n  type: LOGOUT\r\n});\r\n","export const LOGIN_REQUESTED = 'LOGIN_REQUESTED';\r\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCEEDED';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","import React from 'react';\r\n\r\nconst dateConfig = { month: 'short', day: '2-digit', year: 'numeric' };\r\n\r\nexport function Greeting({ userName, className }) {\r\n  const date = new Date();\r\n  const hours = date.getHours();\r\n  let message = '';\r\n  if (hours >= 0 && hours <= 4) {\r\n    message = \"Why aren't you sleeping?\";\r\n  } else if (hours > 4 && hours < 12) {\r\n    message = 'Good morning';\r\n  } else if (hours >= 12 && hours < 18) {\r\n    message = 'Good Afternoon';\r\n  } else if (hours > 18) {\r\n    message = 'Good Evening';\r\n  }\r\n  return <div className={className}>{message} {userName} | {date.toLocaleString('default', dateConfig)}</div>\r\n}","import styled from 'styled-components';\r\n\r\nexport const Image = styled.div`\r\n  background: center / contain no-repeat;\r\n  background-color: ${({ backgroundColor }) => backgroundColor || 'white'};\r\n  ${({ circle }) => circle ? 'border-radius: 50%' : ''};\r\n  ${({ borderColor }) => borderColor ? 'border: 2px solid ' + borderColor : ''};\r\n  background-image: url(${({ imageUrl }) => imageUrl || ''});\r\n  width: ${({ width }) => width || '100%'};\r\n  height: ${({ height }) => height || '100%'};\r\n`;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { greyColor, lightGreyColor } from \"../styledConstants\";\r\nimport { Image } from './Image';\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-width: 275px;\r\n  min-width: 275px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  overflow: hidden;\r\n  user-select: none;\r\n  hr {\r\n    border: 0;\r\n    border-top: 1px solid #ccc;\r\n  }\r\n`;\r\n\r\nconst StyledCardInfo = styled.div`\r\n  display: flex;\r\n  height: 60px;\r\n  box-sizing: border-box;\r\n  padding: 10px 15px;\r\n  align-items: center;\r\n  color: ${props => props.fontColor || 'black'};\r\n  background-color: ${props => props.backgroundColor || 'white'};\r\n  ${Image} {\r\n    margin-right: 15px;\r\n  }\r\n  .title {\r\n    font-size: 18px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .subtitle {\r\n    color: ${props => props.fontColor || greyColor};\r\n    font-weight: 100;\r\n  }\r\n  .value {\r\n    font-size: 24px;\r\n    flex: 1 0;\r\n    text-align: end;\r\n    margin-left: 15px;\r\n  }\r\n`;\r\n\r\nexport function CardInfo({ title, subtitle, value, image, ...rest }) {\r\n  let imageNode;\r\n  if (typeof image === 'string') {\r\n    imageNode = <Image\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      imageUrl={image}\r\n      circle\r\n    />\r\n  } else {\r\n    imageNode = image;\r\n  }\r\n  return (\r\n    <StyledCardInfo {...rest}>\r\n      {imageNode}\r\n      <div>\r\n        <div className=\"title\">{title}</div>\r\n        <div className=\"subtitle\">{subtitle}</div>\r\n      </div>\r\n      {value && <div className=\"value\">\r\n        {value}\r\n      </div>}\r\n    </StyledCardInfo>\r\n  );\r\n}\r\n\r\nexport const CardList = styled.div`\r\n  overflow: hidden;\r\n  & > :not(:first-child) {\r\n    border-top: 1px solid ${lightGreyColor};\r\n  }\r\n`;\r\n\r\nexport const CardMedia = styled(Image)`\r\n  background: center / cover no-repeat;\r\n  background-image: url(${props => props.image});\r\n  height: 200px;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 0 10px;\r\n  text-align: ${props => props.centered ? 'center' : 'start'};\r\n`;\r\n\r\nexport const CardDescription = styled.p`\r\n  padding: 15px;\r\n`;\r\n\r\nexport const CardFooter = styled.div`\r\n  padding: 15px;\r\n  flex: 1 0 20px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: flex-end;\r\n`;\r\n\r\nexport const CardSubstrate = styled.div`\r\n  background-color: ${lightGreyColor};\r\n  padding: 1px;\r\n  ${CardList} {\r\n    border-radius: 4px;\r\n  }\r\n`;\r\n\r\nexport const CardProperty = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 5px 15px;\r\n`;\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport function useApi(fetchApi) {\r\n  const [data, setData] = useState({ data: null, isLoading: true });\r\n\r\n  useEffect(() => {\r\n    fetchApi().then(data => setData({ data, isLoading: false }));\r\n  }, [fetchApi]);\r\n\r\n  return data;\r\n}","import { v4 as uuid } from 'uuid';\r\n\r\nexport const accounts = [\r\n  { id: uuid(), name: 'Cheking', type: 'Main account (...0353)', count: 1500.20 },\r\n  { id: uuid(), name: 'Savings', type: 'Main account (...0353)', count: 5000.20, ssi: 3 },\r\n  { id: uuid(), name: 'Goodnes Points ❤️', type: 'Main account (...0353)', count: 500.40 },\r\n];\r\n\r\nexport const user = {\r\n  login: 'test@test.com',\r\n  name: 'Test User',\r\n  avatar: 'https://i1.pngguru.com/preview/137/834/449/cartoon-cartoon-character-avatar-drawing-film-ecommerce-facial-expression-png-clipart.jpg'\r\n}\r\n\r\nexport const chekingTransactions = [\r\n  {\r\n    date: \"2020-04-23T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Lord of the ring inc',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }]\r\n  },\r\n  {\r\n    date: \"2020-04-22T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Lord of the ring inc',\r\n      type: 'Pay Day',\r\n      amount: 100\r\n    }]\r\n  },\r\n  {\r\n    date: \"2020-04-21T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Lord of the ring inc',\r\n      type: 'Pay Day',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: '230 New York NY',\r\n      amount: 100\r\n    }]\r\n  },\r\n  {\r\n    date: \"2020-04-20T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Lord of the ring inc',\r\n      type: 'Pay Day',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: '230 New York NY',\r\n      amount: 100\r\n    }]\r\n  },\r\n  {\r\n    date: \"2020-04-19T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Lord of the ring inc',\r\n      type: 'Pay Day',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: '230 New York NY',\r\n      amount: 100\r\n    }]\r\n  },\r\n  {\r\n    date: \"2020-04-18T16:00:00.000Z\",\r\n    balance: 10000,\r\n    transactions: [{\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'iPark love',\r\n      type: '230 New York NY',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Target',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }, {\r\n      id: uuid(),\r\n      name: 'Starbucks',\r\n      type: 'Closter NJ',\r\n      amount: 100\r\n    }]\r\n  }\r\n];\r\n\r\nexport const payDay = {\r\n  employerName: 'Facebook, Inc',\r\n  count: 3000,\r\n}\r\n","\r\nexport const delayPromise = time => data => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => res(data), time);\r\n  });\r\n}\r\n\r\nexport function generateInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function emulateServerResponse(data) {\r\n  return Promise.resolve(data).then(delayPromise(generateInt(250, 2000)));\r\n}\r\n\r\nexport function currencyFormat(number = 0, currency = 'USD', locale = 'default') {\r\n  return number.toLocaleString(locale, { style: 'currency', currency: currency });\r\n}\r\n\r\nexport function dateFormat(date = new Date(), options = { month: 'short', day: '2-digit' }, locale = 'default') {\r\n  return date.toLocaleString(locale, options);\r\n}\r\n","import { accounts, user, payDay, chekingTransactions } from \"./mocks\";\r\nimport { emulateServerResponse } from \"./util\";\r\n\r\nclass ApiSevice {\r\n\r\n  logIn(login, password) {\r\n    if (login === 'test@test.com' && password === 'test') {\r\n      return emulateServerResponse(user);\r\n    }\r\n    throw new Error('Wrong login or password');\r\n  }\r\n\r\n  fetchAccounts() {\r\n    return emulateServerResponse(accounts);\r\n  }\r\n\r\n  fetchPayDay() {\r\n    return emulateServerResponse(payDay);\r\n  }\r\n\r\n  fetchChekingTransactions() {\r\n    return emulateServerResponse(chekingTransactions)\r\n      .then(days =>\r\n        days.map(day => ({\r\n          ...day, date: new Date(day.date)\r\n        }))\r\n      );\r\n  }\r\n}\r\n\r\nexport const apiSevice = new ApiSevice();\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo, CardList, CardContent } from \"../Card\";\r\nimport { mainColor, greyColor } from \"../../styledConstants\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { apiSevice } from \"../../services/api\";\r\nimport { Spinner } from \"../Spinner\";\r\nimport { currencyFormat } from \"../../services/util\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const StyledAccountOverviewCard = styled(CardContent)`\r\n  .header {\r\n    margin: 30px 0;\r\n    font-size: 20px;\r\n  }\r\n  .balance {\r\n    margin: 30px 0 10px;\r\n    font-size: 32px;\r\n  }\r\n  .total {\r\n    margin: 10px 0 30px;\r\n    color: ${greyColor};\r\n  }\r\n`;\r\n\r\nexport const Arrow = styled.span`\r\n  color: ${mainColor};\r\n  font-weight: bold;\r\n  &::after {\r\n    content: '﹥'\r\n  }\r\n`;\r\n\r\nexport function AccountOverviewCard() {\r\n  const { data: balances, isLoading } = useApi(apiSevice.fetchAccounts);\r\n  const history = useHistory();\r\n  const totalCash = (balances || []).reduce((sum, balance) => sum + balance.count, 0);\r\n  return (\r\n    <Card>\r\n      <StyledAccountOverviewCard centered>\r\n        <h3 className=\"header\">Accounts Overview</h3>\r\n        <div className=\"balance\">{currencyFormat(totalCash)}</div>\r\n        <div className=\"total\">Total Available cash</div>\r\n      </StyledAccountOverviewCard>\r\n      {isLoading ?\r\n        <Spinner /> :\r\n        <CardList>\r\n          {balances.map(({ id, name, type, count }) =>\r\n            <CardInfo\r\n              key={id}\r\n              title={name}\r\n              subtitle={type}\r\n              value={<>{currencyFormat(count)}<Arrow /></>}\r\n              onClick={() => history.push(`/accounts/${name.toLowerCase()}`)}\r\n            />\r\n          )}\r\n        </CardList>\r\n      }\r\n    </Card>\r\n  )\r\n}","import React from \"react\";\r\nimport { Card, CardInfo, CardMedia, CardDescription, CardFooter } from \"../Card\";\r\nimport { Button } from \"../Button\";\r\nimport logo from '../../static/images/SpiralLogo.jpg'\r\n\r\nexport function GivingImpactCard({ backgroundImage, title, subtitle, description }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        image={logo}\r\n        title={title}\r\n        subtitle={subtitle}\r\n      />\r\n      <CardMedia\r\n        image={backgroundImage}\r\n      />\r\n      <CardDescription>\r\n        {description}\r\n      </CardDescription>\r\n      <CardFooter>\r\n        <Button>Share to spread the world</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};","import React from \"react\";\r\nimport { Card, CardInfo, CardFooter, CardList } from \"../Card\";\r\nimport { Button } from \"../Button\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { apiSevice } from \"../../services/api\";\r\nimport { Spinner } from \"../Spinner\";\r\nimport { currencyFormat } from \"../../services/util\";\r\nimport { mainColor } from \"../../styledConstants\";\r\nimport logo from '../../static/images/SpiralLogo.jpg'\r\n\r\nexport function RecentTransactionsCard() {\r\n  const { data: transactions, isLoading } = useApi(apiSevice.fetchAccounts);\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        title=\"Recent Transactions\"\r\n        subtitle=\"Jun 29\"\r\n        backgroundColor={mainColor}\r\n        fontColor=\"white\"\r\n        image={logo}\r\n      />\r\n      {isLoading ?\r\n        <Spinner /> :\r\n        <CardList>\r\n          {transactions.map(({ id, name, type, count }) =>\r\n            <CardInfo\r\n              key={id}\r\n              title={name}\r\n              subtitle={type}\r\n              value={currencyFormat(count)}\r\n            />\r\n          )}\r\n        </CardList>\r\n      }\r\n      <CardFooter>\r\n        <Button>See more transactions</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo, CardMedia, CardFooter } from \"../Card\";\r\nimport { Button } from \"../Button\";\r\nimport { greenColor } from \"../../styledConstants\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { apiSevice } from \"../../services/api\";\r\nimport { Spinner } from \"../Spinner\";\r\nimport PayDayPic from \"../../static/images/PayDay.jpg\";\r\nimport { currencyFormat } from \"../../services/util\";\r\nimport { StyledAccountOverviewCard } from \"./AccountOverviewCard\";\r\n\r\nconst GreenText = styled.span`\r\n  color: ${greenColor};\r\n`;\r\n\r\nexport function PayDayCard() {\r\n  const { data: payDay, isLoading } = useApi(apiSevice.fetchPayDay);\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        title=\"It's your payday\"\r\n        subtitle=\"Jul 31\"\r\n        fontColor=\"white\"\r\n        backgroundColor={greenColor}\r\n      />\r\n      {isLoading ?\r\n        <Spinner color={greenColor} /> :\r\n        <>\r\n          <StyledAccountOverviewCard centered>\r\n            <div className=\"balance\"><GreenText>+{currencyFormat(payDay.count)}</GreenText></div>\r\n            <div className=\"total\">{payDay.employerName}</div>\r\n          </StyledAccountOverviewCard>\r\n          <CardMedia image={PayDayPic} />\r\n        </>\r\n      }\r\n      <CardFooter>\r\n        <Button color={greenColor}>See more transactions</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}","import React from \"react\";\r\nimport { Card, CardInfo, CardDescription, CardFooter, CardList } from \"../Card\";\r\nimport { Button } from \"../Button\";\r\nimport { mainColor } from \"../../styledConstants\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport { apiSevice } from \"../../services/api\";\r\nimport { Spinner } from \"../Spinner\";\r\nimport { currencyFormat } from \"../../services/util\";\r\nimport logo from '../../static/images/SpiralLogo.jpg'\r\n\r\nexport function UpcomingBigPaymentsCard() {\r\n  const { data: payments, isLoading } = useApi(apiSevice.fetchAccounts);\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        title=\"Upcoming big payments card\"\r\n        subtitle=\"Jun 29\"\r\n        fontColor=\"white\"\r\n        backgroundColor={mainColor}\r\n        image={logo}\r\n      />\r\n      {isLoading ?\r\n        <Spinner /> :\r\n        <CardList>\r\n          {payments.map(({ id, name, type, count }) =>\r\n            <CardInfo\r\n              key={id}\r\n              title={name}\r\n              subtitle={type}\r\n              value={currencyFormat(count)}\r\n            />)}\r\n        </CardList>\r\n      }\r\n      <CardDescription>Total cash in your checking account:</CardDescription>\r\n      <CardFooter>\r\n        <Button>I need a lone</Button>\r\n        <Button>Transfer</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo, CardFooter, CardContent } from \"../Card\";\r\nimport { Button } from \"../Button\";\r\nimport { mainColor, greyColor } from \"../../styledConstants\";\r\nimport logo from '../../static/images/SpiralLogo.jpg'\r\n\r\nconst Quote = styled.h3`\r\n  font-size: 32px;\r\n  margin: 70px 20px 30px;\r\n`;\r\n\r\nconst Author = styled.h3`\r\n  color: ${greyColor};\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport function QuoteOfTheDay({ quote, author }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        title=\"Quote of the day\"\r\n        subtitle=\"Jun 29\"\r\n        fontColor=\"white\"\r\n        backgroundColor={mainColor}\r\n        image={logo}\r\n      />\r\n      <CardContent centered>\r\n        <Quote>“{quote}”</Quote>\r\n        <Author>{author}</Author>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <Button>Share to spread the world</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Greeting } from \"../Greeting\";\r\nimport { AccountOverviewCard } from \"./AccountOverviewCard\";\r\nimport { GivingImpactCard } from \"./GivingImpactCard\";\r\nimport { RecentTransactionsCard } from \"./RecentTransactionsCard\";\r\nimport { PayDayCard } from \"./PayDayCard\";\r\nimport { UpcomingBigPaymentsCard } from \"./UpcomingBigPaymentsCard\";\r\nimport { QuoteOfTheDay } from \"./QuoteOfTheDay\";\r\nimport background from '../../static/images/children-learn-to-make-friends.jpg'\r\n\r\nconst CardsDashboard = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-around;\r\n  & > * {\r\n    margin: 10px;\r\n    flex: 1 1 300px;\r\n    max-width: 500px;\r\n  }\r\n`;\r\n\r\nconst StyledHomePage = styled.div`\r\n  .greeting {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\nexport function HomePage() {\r\n  return (\r\n    <StyledHomePage>\r\n      <Greeting className=\"greeting\" userName=\"Danny\" />\r\n      <CardsDashboard>\r\n        <AccountOverviewCard />\r\n        <GivingImpactCard\r\n          backgroundImage={background}\r\n          title=\"ST Jude\"\r\n          subtitle=\"Your giving impact 5m ago\"\r\n          description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        Integer luctus ligula quis mollis rhoncus. Nulla facilisi.\r\n        Donec consectetur lacus vel quam ullamcorper egestas.\"\r\n        />\r\n        <RecentTransactionsCard />\r\n        <PayDayCard />\r\n        <UpcomingBigPaymentsCard />\r\n        <QuoteOfTheDay\r\n          quote=\"That which does not kill us makes us stronger.\"\r\n          author=\"Friedrich Nietzsche\"\r\n        />\r\n      </CardsDashboard>\r\n    </StyledHomePage>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Button } from \"./Button\";\r\nimport { mainColor } from \"../styledConstants\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst StyledNotImplementedPage = styled.div`\r\n  width: 100%;\r\n  height: calc(100vh - 50px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .title {\r\n    font-size: 32px;\r\n    color: ${mainColor};\r\n    margin-bottom: 20px;\r\n    margin-top: -20%;\r\n  }\r\n`;\r\n\r\nexport function NotImplementedPage() {\r\n  const history = useHistory();\r\n  return (\r\n    <StyledNotImplementedPage>\r\n      <div className=\"title\">Page is not implemented</div>\r\n      <Button onClick={() => history.goBack()}>Go back</Button>\r\n    </StyledNotImplementedPage>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { mainColor } from '../styledConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Image } from './Image';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logOut } from '../store/actions';\r\nimport spiralLogo from '../static/images/SpiralLogo.jpg'\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  background-color: ${mainColor};\r\n  height: 50px;\r\n  line-height: 50px;\r\n  box-sizing: border-box;\r\n  color: white;\r\n  font-size: 26px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\r\n  .header-logo {\r\n    display: flex;\r\n    flex: 1 1 200px;\r\n    margin-right: 30px;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n    .logo {\r\n      padding: 0 10px;\r\n    }\r\n    img {\r\n      padding-left: 10px;\r\n    }\r\n  }\r\n  .header {\r\n    flex: 5 1 500px;\r\n    .header-content {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      max-width: 1080px;\r\n      padding-right: 10%;\r\n      @media only screen and (max-width: 730px) {\r\n        padding-right: 0;\r\n      }\r\n      .user {\r\n        display: flex;\r\n        flex: 0 0 300px;\r\n        margin: 0 10px;\r\n        justify-content: flex-end;\r\n        .name {\r\n          font-size: 20px;\r\n          @media only screen and (max-width: 730px) {\r\n            display: none;\r\n          }\r\n        }\r\n        ${Image} {\r\n          margin: 5px 5px 5px 20px;\r\n          flex: 0 0 40px;\r\n          box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst defautAvatar = 'https://cdn0.iconfinder.com/data/icons/avatar-vol-2-4/512/2-512.png';\r\n\r\nexport function Header({ className }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.authorisation.user);\r\n  return (\r\n    <StyledHeader className={className}>\r\n      <div className=\"header-logo\">\r\n        <img\r\n          src={spiralLogo}\r\n          height=\"40px\"\r\n          alt=\"logo\"\r\n          onClick={() => history.push('/home')} />\r\n        <div className=\"logo\">Spiral</div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"user\">\r\n            <div className=\"name\">{user ? user.name : ''}</div>\r\n            <Image\r\n              width='40px'\r\n              height=\"40px\"\r\n              imageUrl={user ? user.avatar : defautAvatar}\r\n              circle\r\n              onClick={() => dispatch(logOut())}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledHeader>\r\n  )\r\n}","import { NavLink } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { mainColor, greyColor } from '../styledConstants';\r\n\r\nexport const Link = styled(NavLink)`\r\n  color: ${greyColor};\r\n  text-decoration: none;\r\n  &.active {\r\n    color: ${mainColor};\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    color: ${mainColor};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from \"./Link\";\r\n\r\nconst StyledNavPanel = styled.nav`\r\n  flex: 1 1 200px;\r\n  text-align: right;\r\n  margin-right: 30px;\r\n  @media only screen and (max-width: 730px) {\r\n    display: none;\r\n  }\r\n  ul {\r\n    li {\r\n      font-size: 24px;\r\n      padding: 10px;\r\n      &.small {\r\n        padding: 5px 10px;\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function NavPanel({ className }) {\r\n  return (\r\n    <StyledNavPanel className={className}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/home\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/accounts\">Accounts</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/giving\">Giving</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/payments\">Payments</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/cards\">Cards</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/help\">Help and support</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/alerts-settings\">Alerts settings</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/accessebility\">Accessebility</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/policies\">Policies and Terms</Link>\r\n        </li>\r\n      </ul>\r\n    </StyledNavPanel>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo } from '../Card';\r\nimport { apiSevice } from '../../services/api';\r\nimport { useApi } from '../../hooks/useApi';\r\nimport { Spinner } from '../Spinner';\r\nimport { Image } from '../Image';\r\nimport { mainColor, greyColor, greenColor } from '../../styledConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { currencyFormat } from '../../services/util';\r\nimport { Arrow } from '../HomePage/AccountOverviewCard';\r\n\r\nconst StyledAccountsPage = styled.div`\r\n  .main {\r\n    .balance {\r\n      margin: 50px 0 20px;\r\n      text-align: center;\r\n      font-size: 32px;\r\n    }\r\n    .total {\r\n      margin: 20px 0 50px;\r\n      text-align: center;\r\n      color: ${greyColor}\r\n    }\r\n    .actions {\r\n      margin: 50px 0;\r\n      display: flex;\r\n      justify-content: space-around;\r\n      .action {\r\n        ${Image} {\r\n          width: 10vw;\r\n          height: 10vw;\r\n          max-width: 120px;\r\n          min-width: 75px;\r\n          max-height: 120px;\r\n          min-height: 75px;\r\n        }\r\n        .title {\r\n          margin-top: 10px;\r\n          font-size: 18px;\r\n          color: ${greyColor};\r\n          text-align: center;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .accounts {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n    & > ${Card} {\r\n      flex: 1 1;\r\n      margin: 10px;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledSSI = styled.div`\r\n  text-align: center;\r\n  color: ${greenColor};\r\n  padding: 5px 15px 10px;\r\n`;\r\n\r\nfunction SSI({ value }) {\r\n  return (\r\n    <StyledSSI>\r\n      {value > 0 ? '⯅' : '⯆'} Savings is {value > 0 ? 'up' : 'down'} {value}% from last mounth\r\n    </StyledSSI>\r\n  )\r\n}\r\n\r\nexport function AccountsPage() {\r\n  const { data: balances, isLoading } = useApi(apiSevice.fetchAccounts);\r\n  const totalCash = (balances || []).reduce((sum, balance) => sum + balance.count, 0);\r\n  const history = useHistory();\r\n  return (\r\n    <StyledAccountsPage>\r\n      <div className=\"main\">\r\n        <h3 className=\"balance\">\r\n          {currencyFormat(totalCash)}\r\n        </h3>\r\n        <h3 className=\"total\">\r\n          Total available cash\r\n        </h3>\r\n        <div className=\"actions\">\r\n          <div className=\"action\">\r\n            <Image\r\n              circle\r\n              borderColor={mainColor}\r\n            />\r\n            <div className=\"title\">Send</div>\r\n          </div>\r\n          <div className=\"action\">\r\n            <Image\r\n              circle\r\n              borderColor={mainColor}\r\n            />\r\n            <div className=\"title\">Bill Pay</div>\r\n          </div>\r\n          <div className=\"action\">\r\n            <Image\r\n              circle\r\n              borderColor={mainColor}\r\n            />\r\n            <div className=\"title\">Transfer</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {isLoading ?\r\n        <Spinner /> :\r\n        <div className=\"accounts\">\r\n          {balances.map(({ id, name, type, count, ssi }) =>\r\n            <Card key={id}>\r\n              <CardInfo\r\n                title={name}\r\n                subtitle={type}\r\n                value={<>{currencyFormat(count)} <Arrow /></>}\r\n                onClick={() => history.push(`/accounts/${name.toLowerCase()}`)}\r\n              />\r\n              {ssi ? <SSI value={ssi} /> : null}\r\n            </Card>\r\n          )}\r\n        </div>\r\n      }\r\n    </StyledAccountsPage>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo, CardSubstrate, CardProperty, CardList } from '../Card';\r\nimport { apiSevice } from '../../services/api';\r\nimport { useApi } from '../../hooks/useApi';\r\nimport { Spinner } from '../Spinner';\r\nimport { mainColor, greyColor } from '../../styledConstants';\r\nimport { currencyFormat, dateFormat } from '../../services/util';\r\nimport { Input } from '../Input';\r\nimport { Button } from '../Button';\r\n\r\nconst StyledTransactionsCard = styled.div`\r\n  margin: 10px;\r\n  .date {\r\n    padding: 5px 15px;\r\n  }\r\n`;\r\n\r\nconst HighlightedSubstr = styled.span`\r\n  background-color: ${mainColor};\r\n  color: white;\r\n`;\r\n\r\nfunction HighlightedSubstring({ string = '', regExp }) {\r\n  const matchedSubstrings = Array.from(string.matchAll(regExp));\r\n\r\n  if (!matchedSubstrings.length || regExp.test('')) {\r\n    return string;\r\n  }\r\n\r\n  let caret = 0;\r\n  let substrings = matchedSubstrings.reduce((arr, matched) => {\r\n    const part = arr.concat([\r\n      <span>{string.substring(caret, matched.index)}</span>,\r\n      <HighlightedSubstr>{matched[0]}</HighlightedSubstr>\r\n    ]);\r\n    caret = matched.index + matched[0].length;\r\n    return part;\r\n  }, []).concat(<span>{string.substring(caret, string.length)}</span>);\r\n  return substrings;\r\n}\r\n\r\nexport function TransactionsCard({ date, balance, transactions = [], regExp }) {\r\n\r\n  const filteredTransactions = regExp.test('') ?\r\n    transactions :\r\n    transactions.filter(i => i.name.match(regExp) || i.type.match(regExp));\r\n\r\n  if (!filteredTransactions.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <StyledTransactionsCard>\r\n      <div className=\"date\">{dateFormat(date)}</div>\r\n      <Card>\r\n        <CardSubstrate>\r\n          <CardProperty>\r\n            <div>End day balance</div>\r\n            <div>{currencyFormat(balance)}</div>\r\n          </CardProperty>\r\n          <CardList>\r\n            {filteredTransactions.map(({ id, name, type, amount }) =>\r\n              <CardInfo\r\n                key={id}\r\n                title={<HighlightedSubstring string={name} regExp={regExp} />}\r\n                subtitle={<HighlightedSubstring string={type} regExp={regExp} />}\r\n                value={currencyFormat(amount)}\r\n              />\r\n            )}\r\n          </CardList>\r\n        </CardSubstrate>\r\n      </Card>\r\n    </StyledTransactionsCard>\r\n  )\r\n}\r\n\r\nconst StyledCheckingPage = styled.div`\r\n  .main {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-wrap: wrap;\r\n    .info {\r\n      .balance {\r\n        margin: 50px 0 20px;\r\n        text-align: center;\r\n        font-size: 32px;\r\n      }\r\n      .total {\r\n        margin: 20px 0 50px;\r\n        text-align: center;\r\n        color: ${greyColor}\r\n      }\r\n    }\r\n    .search {\r\n      margin: 30px 10px;\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      justify-content: space-around;\r\n      align-items: center;\r\n      ${Input} {\r\n        margin: 20px;\r\n        background-color: white;\r\n      }\r\n      ${Button} {\r\n        margin: 20px;\r\n        background-color: ${mainColor};\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n  .accounts {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: flex-start;\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport function CheckingPage() {\r\n  const [search, setSearch] = useState('');\r\n  const { data: days, isLoading } = useApi(apiSevice.fetchChekingTransactions);\r\n  const totalCash = 1500.2;\r\n\r\n  const searchString = search.replace(/\\\\/g, '\\\\\\\\');\r\n  const regExp = new RegExp(searchString, 'gi');\r\n\r\n  return (\r\n    <StyledCheckingPage>\r\n      <div className=\"main\">\r\n        <div className=\"info\">\r\n          <h3 className=\"balance\">\r\n            {currencyFormat(totalCash)}\r\n          </h3>\r\n          <h3 className=\"total\">\r\n            Total available cash\r\n        </h3>\r\n        </div>\r\n        <div className=\"search\">\r\n          <Input\r\n            value={search}\r\n            onChange={({ target: { value } }) => setSearch(value)}\r\n            placeholder=\"Search transactions\"\r\n          />\r\n          <Button>Account details</Button>\r\n        </div>\r\n      </div>\r\n      {isLoading ?\r\n        <Spinner /> :\r\n        <div className=\"accounts\">\r\n          {days.map(({ date, balance, transactions }) =>\r\n            <TransactionsCard\r\n              key={date.valueOf()}\r\n              date={date}\r\n              balance={balance}\r\n              transactions={transactions}\r\n              regExp={regExp}\r\n            />\r\n          )}\r\n        </div>\r\n      }\r\n    </StyledCheckingPage>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function PrivateRoute({ redirectTo = '/login', ...rest }) {\r\n  const isLoggedIn = useSelector(store => store.authorisation.loggedIn);\r\n  return isLoggedIn ? <Route {...rest} /> : <Redirect to={redirectTo} />\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { backgroundColor } from '../styledConstants';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginPage } from './LoginPage';\r\nimport { HomePage } from './HomePage';\r\nimport { NotImplementedPage } from './NotImplemented';\r\nimport { Header } from './Header';\r\nimport { NavPanel } from './NavPanel';\r\nimport { AccountsPage } from './AccountsPage';\r\nimport { CheckingPage } from './CheckingPage';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nconst StyledLayout = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${backgroundColor};\r\n  & > .page {\r\n    flex: 1 1;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: calc(100% - 50px);\r\n    & > .content {\r\n      flex: 5 1 500px;\r\n      overflow-y: auto;\r\n      height: 100%;\r\n      & > main {\r\n        max-width: 1080px;\r\n        padding-right: 10%;\r\n        @media only screen and (max-width: 730px) {\r\n          padding-right: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function Layout() {\r\n  return (\r\n    <StyledLayout>\r\n      <Header>Spiral</Header>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n        <PrivateRoute path=\"/\">\r\n          <div className=\"page\">\r\n            <NavPanel />\r\n            <div className=\"content\">\r\n              <main>\r\n                <Switch>\r\n                  <Route path=\"/home\">\r\n                    <HomePage />\r\n                  </Route>\r\n                  <Route path=\"/accounts\">\r\n                    <Switch>\r\n                      <Route exact path=\"/accounts\"><AccountsPage /></Route>\r\n                      <Route path=\"/accounts/cheking\"><CheckingPage /></Route>\r\n                      <Route path=\"/accounts/*\"><NotImplementedPage /></Route>\r\n                    </Switch>\r\n                  </Route>\r\n                  <Route path=\"/giving\"><NotImplementedPage /></Route>\r\n                  <Route path=\"/payments\"><NotImplementedPage /></Route>\r\n                  <Route path=\"/cards\"><NotImplementedPage /></Route>\r\n                  <Redirect path=\"*\" to=\"/home\"></Redirect>\r\n                </Switch>\r\n              </main>\r\n            </div>\r\n          </div>\r\n        </PrivateRoute>\r\n      </Switch>\r\n    </StyledLayout>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Layout } from './components/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  LOGIN_SUCCEEDED,\r\n  LOGIN_REQUESTED\r\n} from \"../types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem('user'));\r\n\r\nconst initialUser = user ? { loggedIn: true, user } : {};\r\n\r\nexport default (state = initialUser, { type, ...user }) => {\r\n  switch (type) {\r\n    case LOGIN_REQUESTED:\r\n      return { loggingIn: true }\r\n    case LOGIN_SUCCEEDED:\r\n      return { loggedIn: true, user };\r\n    case LOGIN_FAILED:\r\n      return {};\r\n    case LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { connectRouter } from \"connected-react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default connectRouter(history);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport authorisation from \"./authorisation\";\r\nimport router from \"./router\";\r\n\r\nexport default combineReducers({\r\n  router,\r\n  authorisation\r\n});\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOGIN_REQUESTED,\r\n  LOGIN_SUCCEEDED,\r\n  LOGIN_FAILED,\r\n  LOGOUT\r\n} from \"../types\";\r\nimport { apiSevice } from \"../../services/api\";\r\n\r\nexport function* logIn() {\r\n  yield takeLatest(LOGIN_REQUESTED, function* ({ login, password }) {\r\n    try {\r\n      const user = yield call(() => apiSevice.logIn(login, password));\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      yield put({ type: LOGIN_SUCCEEDED, ...user });\r\n    } catch (e) {\r\n      yield put({ type: LOGIN_FAILED, message: e.message });\r\n    }\r\n  });\r\n}\r\n\r\nexport function* logOut() {\r\n  yield takeLatest(LOGOUT, function* () {\r\n    localStorage.removeItem('user');\r\n    yield null;\r\n  });\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { logIn, logOut } from \"./user\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([logIn(), logOut()]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\nimport { history } from \"./reducers/router\";\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(routerMiddleware(history), sagaMiddleware),\r\n    // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { history };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { mainColor, greyColor, backgroundColor } from './styledConstants';\r\nimport store, { history } from \"./store/store\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst GlogalStyle = createGlobalStyle`\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  \r\n  ::-webkit-scrollbar-track {\r\n    background-color: ${backgroundColor};\r\n  }\r\n  \r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${greyColor};\r\n    border-radius: 8px;\r\n    &:hover {\r\n      background-color: ${mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlogalStyle />\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <App />\r\n      </ConnectedRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}