{"version":3,"sources":["components/Button.js","styledConstants.js","components/Input.js","components/Form.js","hooks/useAuthorisation.js","store/types.js","components/LoginPage.js","store/actions.js","components/Image.js","components/Card.js","components/Greeting.js","services/moks.js","services/util.js","services/api.js","components/HomePage.js","hooks/useApi.js","components/NotImplemented.js","components/Header.js","components/Link.js","components/NavPanel.js","components/Layout.js","App.js","serviceWorker.js","store/reducers/router.js","store/reducers/index.js","store/reducers/user.js","store/sagas/user.js","store/sagas/index.js","store/store.js","index.js"],"names":["Button","styled","button","props","color","backgroundColor","Input","input","attrs","placeholder","PasswordInput","type","Form","form","StyledLabel","label","Label","title","children","className","useAuthorisation","userSelector","deps","user","useSelector","dispatch","useDispatch","useEffect","savedUser","JSON","parse","localStorage","getItem","StyledLoginPage","div","LoginPage","useState","login","password","set","history","useHistory","state","push","setItem","stringify","value","onChange","target","onClick","logIn","Image","circle","imageUrl","width","height","Card","StyledCardInfo","fontColor","CardInfo","imageNode","subtitle","image","rest","CardList","CardMedia","CardContent","centered","CardDescription","p","CardFooter","dateConfig","month","day","year","Greeting","userName","date","Date","hours","getHours","message","toLocaleString","accounts","id","uuid","name","count","avatar","emulateServerResponse","data","Promise","resolve","then","min","max","Math","ceil","floor","time","random","res","setTimeout","apiSevice","Error","StyledHomePage","HomePage","fetchApi","isLoading","setData","useApi","fetchAccounts","AccountOverviewCard","balances","GivingImpactCard","titleImage","backgroundImage","description","RecentTransactionsCard","PayDayCard","UpcomingBigPaymentsCard","QuoteOfTheDay","quote","author","StyledAccountOverviewCard","totalCash","reduce","sum","balance","map","key","transactions","payments","Quote","h3","Author","StyledNotImplementedPage","NotImplementedPage","goBack","StyledHeader","header","Header","Link","NavLink","StyledNavPanel","nav","NavPanel","to","StyledLayout","Layout","path","exact","App","Boolean","window","location","hostname","match","createBrowserHistory","connectRouter","combineReducers","router","payload","logOut","takeLatest","call","put","removeItem","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","compose","applyMiddleware","routerMiddleware","__REDUX_DEVTOOLS_EXTENSION__","run","GlogalStyle","createGlobalStyle","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.863871d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { mainColor } from \"../styledConstants\";\r\n\r\nexport const Button = styled.button`\r\n  border-radius: 20px;\r\n  padding: 10px 20px;\r\n  line-height: 16px;\r\n  height: 36px;\r\n  border: 1px solid ${props => props.color || mainColor};\r\n  color: ${props => props.color || mainColor};\r\n  background-color: ${props => props.backgroundColor || 'transparent'};\r\n  transition: color 250ms, background-color 250ms;\r\n  &:hover {\r\n    background-color: ${props => props.color || mainColor};\r\n    color: white;\r\n  }\r\n`;","export const mainColor = '#d83275';\r\nexport const backgroundColor = '#f7f8fb';\r\nexport const greenColor = '#0e994d';\r\nexport const greyColor = '#aaa';","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { mainColor, greyColor } from \"../styledConstants\";\r\n\r\nexport const Input = styled.input.attrs(props => ({\r\n  placeholder: props.placeholder\r\n}))`\r\n  padding: 10px 0;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  height: 40px;\r\n  border: 0;\r\n  border-bottom: 1px solid ${greyColor};\r\n  color: ${props => props.color || mainColor};\r\n  background-color: transparent;\r\n  transition: border-bottom-color 250ms;\r\n  &:focus {\r\n    border-bottom-color: ${props => props.color || mainColor};\r\n  }\r\n  &:placeholder {\r\n    color: ${greyColor};\r\n  }\r\n`;\r\n\r\nexport const PasswordInput = styled(Input).attrs({ type: 'password' })``;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { mainColor, greyColor } from \"../styledConstants\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  & > * {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  .title {\r\n    font-size: 24px;\r\n    margin: 5px 0;\r\n  }\r\n`;\r\n\r\nexport function Label({ title, children }) {\r\n  return (\r\n    <StyledLabel>\r\n      <div className=\"title\">{title}</div>\r\n      {children}\r\n    </StyledLabel>\r\n  )\r\n} \r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { LOGIN_SUCCEEDED } from '../store/types';\r\n\r\nexport function useAuthorisation(userSelector, deps) {\r\n  const user = useSelector(userSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      const savedUser = JSON.parse(localStorage.getItem('user'));\r\n      if (savedUser) {\r\n        dispatch({ type: LOGIN_SUCCEEDED, ...savedUser });\r\n      }\r\n    }\r\n  }, deps);\r\n\r\n  return user;\r\n}","export const LOGIN_REQUESTED = 'LOGIN_REQUESTED';\r\nexport const LOGIN_SUCCEEDED = 'LOGIN_SUCCEEDED';\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Button } from \"./Button\";\r\nimport { mainColor } from \"../styledConstants\";\r\nimport { Input, PasswordInput } from \"./Input\";\r\nimport { Form, Label } from \"./Form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { logIn } from \"../store/actions\";\r\nimport { LOGIN_SUCCEEDED } from \"../store/types\";\r\nimport { useAuthorisation } from \"../hooks/useAuthorisation\";\r\n\r\nconst StyledLoginPage = styled.div`\r\n  padding: 50px;\r\n  .login-wrapper {\r\n    margin: 0 auto;\r\n    max-width: 500px;\r\n    .loginTitle {\r\n      display: inline-block;\r\n      font-weight: bold;\r\n      font-size: 26px;\r\n      border-bottom: 2px solid ${mainColor};\r\n    }\r\n    .loginForm {\r\n      margin: 50px 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport function LoginPage() {\r\n  const [{ login, password }, set] = useState({ login: '', password: '' });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useAuthorisation(state => state.user);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/home');\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n  });\r\n\r\n  /* const savedUser = localStorage.getItem('user');\r\n  if (savedUser) {\r\n    dispatch({ type: LOGIN_SUCCEEDED, ...JSON.parse(savedUser) });\r\n  } */\r\n\r\n  return (\r\n    <StyledLoginPage>\r\n      <div className=\"login-wrapper\">\r\n        <h2 className=\"loginTitle\">\r\n          Login\r\n        </h2>\r\n        <Form className=\"loginForm\">\r\n          <Label title=\"Login\">\r\n            <Input\r\n              value={login}\r\n              onChange={({ target: { value } }) => set({ login: value, password })}\r\n              placeholder=\"Your email address\"\r\n            />\r\n          </Label>\r\n          <Label title=\"Password\">\r\n            <PasswordInput\r\n              value={password}\r\n              onChange={({ target: { value } }) => set({ login, password: value })}\r\n              placeholder=\"Password\"\r\n            />\r\n          </Label>\r\n          <Button onClick={() => { dispatch(logIn(login, password)) }}>LOGIN</Button>\r\n        </Form>\r\n      </div>\r\n    </StyledLoginPage>\r\n  )\r\n}","import {\r\n  LOGIN_REQUESTED,\r\n  LOGIN_SUCCEEDED,\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nexport const logIn = (login, password) => ({\r\n  type: LOGIN_REQUESTED,\r\n  login,\r\n  password\r\n});\r\n\r\nexport const logOut = () => ({\r\n  type: LOGOUT\r\n});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Image = styled.div`\r\n  background: center / contain no-repeat;\r\n  background-color: ${({ backgroundColor }) => backgroundColor || 'white'};\r\n  ${({ circle }) => circle ? 'border-radius: 50%;' : ''};\r\n  background-image: url(${({ imageUrl }) => imageUrl || ''});\r\n  width: ${({ width }) => width || '100%'};\r\n  height: ${({ height }) => height || '100%'};\r\n`;\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { greyColor } from \"../styledConstants\";\r\nimport { Image } from './Image';\r\n\r\nexport const Card = styled.div`\r\n  min-width: 275px;\r\n  min-width: 275px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  overflow: hidden;\r\n  hr {\r\n    border: 0;\r\n    border-top: 1px solid #ccc;\r\n  }\r\n  & > :not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nconst StyledCardInfo = styled.div`\r\n  display: flex;\r\n  height: 40px;\r\n  padding: 10px;\r\n  align-items: center;\r\n  color: ${props => props.fontColor || 'black'};\r\n  background-color: ${props => props.backgroundColor || 'white'};\r\n  ${Image} {\r\n    margin-right: 20px;\r\n  }\r\n  .title {\r\n    font-size: 20px;\r\n    margin-bottom: 5px;\r\n  }\r\n  .subtitle {\r\n    color: ${props => props.fontColor || greyColor};\r\n    font-weight: 100;\r\n  }\r\n  .value {\r\n    font-size: 26px;\r\n    flex: 1 0;\r\n    text-align: end;\r\n  }\r\n`;\r\n\r\nexport function CardInfo({ title, subtitle, value, image, ...rest }) {\r\n  let imageNode;\r\n  if (typeof image === 'string') {\r\n    imageNode = <Image\r\n      width=\"40px\"\r\n      height=\"40px\"\r\n      imageUrl={image}\r\n      circle\r\n    />\r\n  } else {\r\n    imageNode = image;\r\n  }\r\n  return (\r\n    <StyledCardInfo {...rest}>\r\n      {imageNode}\r\n      <div>\r\n        <div className=\"title\">{title}</div>\r\n        <div className=\"subtitle\">{subtitle}</div>\r\n      </div>\r\n      {value && <div className=\"value\">{value}</div>}\r\n    </StyledCardInfo>\r\n  );\r\n}\r\n\r\nexport const CardList = styled.div`\r\n  & > :not(:first-child) {\r\n    border-top: 1px solid ${greyColor};\r\n  }\r\n`;\r\n\r\nexport const CardMedia = styled(Image)`\r\n  background: center / cover no-repeat;\r\n  background-image: url(${props => props.image});\r\n  height: 200px;\r\n`;\r\n\r\nexport const CardContent = styled.div`\r\n  padding: 0 10px;\r\n  text-align: ${props => props.centered ? 'center' : 'start'};\r\n`;\r\n\r\nexport const CardDescription = styled.p`\r\n  padding: 0 10px;\r\n`;\r\n\r\nexport const CardFooter = styled.div`\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n`;\r\n","import React from 'react';\r\n\r\nconst dateConfig = { month: 'short', day: '2-digit', year: 'numeric' };\r\n\r\nexport function Greeting({ userName, className }) {\r\n  const date = new Date();\r\n  const hours = date.getHours();\r\n  let message = '';\r\n  if (hours >= 0 && hours <= 4) {\r\n    message = \"Why aren't you sleeping?\";\r\n  } else if (hours > 4 && hours < 12) {\r\n    message = 'Good morning';\r\n  } else if (hours >= 12 && hours < 18) {\r\n    message = 'Good Afternoon';\r\n  } else if (hours > 18) {\r\n    message = 'Good Evening';\r\n  }\r\n  return <div className={className}>{message} {userName} | {date.toLocaleString('default', dateConfig)}</div>\r\n}","import { v4 as uuid } from 'uuid';\r\n\r\nexport const accounts = [\r\n  { id: uuid(), name: 'Cheking', type: 'Main account (...0353)', count: 1500 },\r\n  { id: uuid(), name: 'Savings', type: 'Main account (...0353)', count: 5000 },\r\n  { id: uuid(), name: 'Goodnes Points', type: 'Main account (...0353)', count: 500 },\r\n];\r\n\r\nexport const user = {\r\n  login: 'test@test.com',\r\n  name: 'Test User',\r\n  avatar: 'https://i1.pngguru.com/preview/137/834/449/cartoon-cartoon-character-avatar-drawing-film-ecommerce-facial-expression-png-clipart.jpg'\r\n}\r\n","\r\nexport const delayPromise = time => data => {\r\n  return new Promise((res) => {\r\n    setTimeout(() => res(data), time);\r\n  });\r\n}\r\n\r\nexport function generateInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nexport function emulateServerResponse(data) {\r\n  return Promise.resolve(data).then(delayPromise(generateInt(100, 1000)));\r\n}\r\n","import { accounts, user } from \"./moks\";\r\nimport { delayPromise, generateInt, emulateServerResponse } from \"./util\";\r\n\r\nclass ApiSevice {\r\n  constructor() { }\r\n\r\n  logIn(login, password) {\r\n    if (login === 'test@test.com' && password === 'test') {\r\n      return emulateServerResponse(user);\r\n    }\r\n    throw new Error('Wrong login or password');\r\n  }\r\n\r\n  fetchAccounts() {\r\n    return emulateServerResponse(accounts);\r\n  }\r\n}\r\n\r\nexport const apiSevice = new ApiSevice();\r\n","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Card, CardInfo, CardMedia, CardDescription, CardFooter, CardList, CardContent } from \"./Card\";\r\nimport { Button } from \"./Button\";\r\nimport { Greeting } from \"./Greeting\";\r\nimport { greenColor, mainColor, greyColor } from \"../styledConstants\";\r\nimport { useApi } from \"../hooks/useApi\";\r\nimport { apiSevice } from \"../services/api\";\r\n\r\nconst StyledHomePage = styled.div`\r\n  .cards {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-around;\r\n    & > * {\r\n      margin: 10px;\r\n      flex: 1 1 300px;\r\n      max-width: 500px;\r\n    }\r\n  }\r\n  .greeting {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\nexport function HomePage() {\r\n  const { data: accounts, isLoading } = useApi(apiSevice.fetchAccounts);\r\n  return (\r\n    <StyledHomePage>\r\n      <Greeting className=\"greeting\" userName=\"Danny\" />\r\n      <div className=\"cards\">\r\n        <AccountOverviewCard balances={accounts ?? []} />\r\n        <GivingImpactCard\r\n          titleImage=\"https://cms-tc.pbskids.org/parents/expert-tips-and-advice/helping-young-children-learn-to-make-friends-hero.jpg?mtime=20181008025027\"\r\n          backgroundImage=\"https://cms-tc.pbskids.org/parents/expert-tips-and-advice/helping-young-children-learn-to-make-friends-hero.jpg?mtime=20181008025027\"\r\n          title=\"ST Jude\"\r\n          subtitle=\"Your giving impact 5m ago\"\r\n          description=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit.\r\n        Integer luctus ligula quis mollis rhoncus. Nulla facilisi.\r\n        Donec consectetur lacus vel quam ullamcorper egestas.\r\n        Donec ultricies ligula velit, quis maximus libero hendrerit bibendum.\r\n        Nullam rhoncus elit vitae metus auctor lobortis. Nam egestas nisl vitae ornare convallis.\"\r\n        />\r\n        <RecentTransactionsCard />\r\n        <PayDayCard />\r\n        <UpcomingBigPaymentsCard />\r\n        <QuoteOfTheDay\r\n          quote=\"That which does not kill us makes us stronger.\"\r\n          author=\"Friedrich Nietzsche\"\r\n        />\r\n      </div>\r\n    </StyledHomePage>\r\n  )\r\n}\r\n\r\nconst StyledAccountOverviewCard = styled(CardContent)`\r\n  .header {\r\n    margin-top: 20px;\r\n    font-size: 20px;\r\n  }\r\n  .balance {\r\n    margin-top: 20px;\r\n    font-size: 28px;\r\n  }\r\n  .total {\r\n    margin-top: 10px;\r\n    color: ${greyColor};\r\n  }\r\n`;\r\n\r\nexport function AccountOverviewCard({ balances = [] }) {\r\n  const totalCash = balances.reduce((sum, balance) => sum + balance.count, 0);\r\n  return (\r\n    <Card>\r\n      <StyledAccountOverviewCard centered>\r\n        <h3 className=\"header\">Accounts Overview</h3>\r\n        <div className=\"balance\">${totalCash}</div>\r\n        <div className=\"total\">Total Available cash</div>\r\n      </StyledAccountOverviewCard>\r\n      <CardList>\r\n        {balances.map(({ id, name, type, count }) => <CardInfo key={id} title={name} subtitle={type} value={`$${count}`} />)}\r\n      </CardList>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport function GivingImpactCard({ titleImage, backgroundImage, title, subtitle, description }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo\r\n        image={titleImage}\r\n        title={title}\r\n        subtitle={subtitle}\r\n      />\r\n      <CardMedia\r\n        image={backgroundImage}\r\n      />\r\n      <CardDescription>\r\n        {description}\r\n      </CardDescription>\r\n      <CardFooter>\r\n        <Button>Share to spread the world</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport function RecentTransactionsCard({ transactions = [] }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo title=\"Recent Transactions\" subtitle=\"Jun 29\" backgroundColor={mainColor} fontColor=\"white\" />\r\n      <CardList>\r\n        {transactions.map(({ id, name, type, count }) => <CardInfo key={id} title={name} subtitle={type} value={`$${count}`} />)}\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n      </CardList>\r\n      <CardFooter>\r\n        <Button>See more transactions</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport function PayDayCard() {\r\n  return (\r\n    <Card>\r\n      <CardInfo title=\"It's your payday\" subtitle=\"Jul 31\" fontColor=\"white\" backgroundColor={greenColor} />\r\n      <CardMedia image=\"\" />\r\n      <CardFooter>\r\n        <Button color={greenColor}>See more transactions</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport function UpcomingBigPaymentsCard({ payments = [] }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo title=\"Upcoming big payments card\" subtitle=\"Jun 29\" fontColor=\"white\" backgroundColor={mainColor} />\r\n      <CardList>\r\n        {payments.map(({ id, name, type, count }) => <CardInfo key={id} title={name} subtitle={type} value={`$${count}`} />)}\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n        <CardInfo title=\"Cheking\" subtitle=\"Main account (...0353)\" value=\"$1,1500.20\" />\r\n      </CardList>\r\n      <CardDescription>Total cash in your checking account:</CardDescription>\r\n      <CardFooter>\r\n        <Button>I need a lone</Button>\r\n        <Button>Transfer</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst Quote = styled.h3`\r\n  font-size: 25px;\r\n  padding: 50px 20px 30px;\r\n`;\r\n\r\nconst Author = styled.h3`\r\n  color: ${greyColor};\r\n`;\r\n\r\nexport function QuoteOfTheDay({ quote, author }) {\r\n  return (\r\n    <Card>\r\n      <CardInfo title=\"Quote of the day\" subtitle=\"Jun 29\" fontColor=\"white\" backgroundColor={mainColor} />\r\n      <CardContent centered>\r\n        <Quote>“{quote}”</Quote>\r\n        <Author>{author}</Author>\r\n      </CardContent>\r\n      <CardFooter>\r\n        <Button>Share to spread the world</Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nexport function useApi(fetchApi) {\r\n  const [data, setData] = useState({ data: null, isLoading: true });\r\n\r\n  useEffect(() => {\r\n    fetchApi().then(data => setData({ data, isLoading: false }));\r\n  });\r\n\r\n  return data;\r\n}","import React from \"react\";\r\nimport styled from 'styled-components';\r\nimport { Button } from \"./Button\";\r\nimport { mainColor } from \"../styledConstants\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst StyledNotImplementedPage = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .title {\r\n    font-size: 32px;\r\n    color: ${mainColor};\r\n    margin-bottom: 20px;\r\n    margin-top: -20%;\r\n  }\r\n`;\r\n\r\nexport function NotImplementedPage() {\r\n  const history = useHistory();\r\n  return (\r\n    <StyledNotImplementedPage>\r\n      <div className=\"title\">Page is not implemented</div>\r\n      <Button onClick={() => history.goBack()}>Go back</Button>\r\n    </StyledNotImplementedPage>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { mainColor } from '../styledConstants';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Image } from './Image';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useAuthorisation } from '../hooks/useAuthorisation';\r\nimport { logOut } from '../store/actions';\r\n\r\nconst StyledHeader = styled.header`\r\n  display: flex;\r\n  background-color: ${mainColor};\r\n  height: 50px;\r\n  line-height: 50px;\r\n  box-sizing: border-box;\r\n  color: white;\r\n  font-size: 26px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0,0,0,0.2), 0px 1px 1px 0px rgba(0,0,0,0.14), 0px 1px 3px 0px rgba(0,0,0,0.12);\r\n  .header-logo {\r\n    flex: 1 1 200px;\r\n    text-align: right;\r\n    margin-right: 30px;\r\n    .logo {\r\n      padding-right: 10px;\r\n    }\r\n  }\r\n  .header {\r\n    flex: 5 1 500px;\r\n    .header-content {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      align-items: center;\r\n      max-width: 1080px;\r\n      .user {\r\n        display: flex;\r\n        flex: 0 0 300px;\r\n        margin: 0 10px;\r\n        justify-content: flex-end;\r\n        .name {\r\n          font-size: 20px;\r\n        }\r\n        ${Image} {\r\n          margin: 5px 5px 5px 20px;\r\n          flex: 0 0 40px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst defautAvatar = 'https://cdn0.iconfinder.com/data/icons/avatar-vol-2-4/512/2-512.png';\r\n\r\nexport function Header({ className }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const user = useAuthorisation(state => state.user);\r\n  return (\r\n    <StyledHeader className={className}>\r\n      <div className=\"header-logo\">\r\n        <div className=\"logo\">Spiral</div>\r\n      </div>\r\n      <div className=\"header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"user\">\r\n            <div className=\"name\">{user ? user.name : ''}</div>\r\n            <Image\r\n              width='40px'\r\n              height=\"40px\"\r\n              imageUrl={user ? user.avatar : defautAvatar}\r\n              circle\r\n              onClick={() => dispatch(logOut())}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledHeader>\r\n  )\r\n}","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport { mainColor, greyColor } from '../styledConstants';\r\n\r\nexport const Link = styled(NavLink)`\r\n  color: ${greyColor};\r\n  text-decoration: none;\r\n  &.active {\r\n    color: ${mainColor};\r\n    outline: none;\r\n  }\r\n  &:hover {\r\n    color: ${mainColor};\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from \"./Link\";\r\n\r\nconst StyledNavPanel = styled.nav`\r\n  flex: 1 1 200px;\r\n  text-align: right;\r\n  margin-right: 30px;\r\n  @media only screen and (max-width: 730px) {\r\n    display: none;\r\n  }\r\n  ul {\r\n    li {\r\n      font-size: 24px;\r\n      padding: 10px;\r\n      &.small {\r\n        padding: 5px 10px;\r\n        font-size: 16px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function NavPanel({ className }) {\r\n  return (\r\n    <StyledNavPanel className={className}>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/home\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/accounts\">Accounts</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/giving\">Giving</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/payments\">Payments</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/cards\">Cards</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/help\">Help and support</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/alerts-settings\">Alerts settings</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/accessebility\">Accessebility</Link>\r\n        </li>\r\n        <li className=\"small\">\r\n          <Link to=\"/policies\">Policies and Terms</Link>\r\n        </li>\r\n      </ul>\r\n    </StyledNavPanel>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { backgroundColor } from '../styledConstants';\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginPage } from './LoginPage';\r\nimport { HomePage } from './HomePage';\r\nimport { NotImplementedPage } from './NotImplemented';\r\nimport { Header } from './Header';\r\nimport { NavPanel } from './NavPanel';\r\nimport { useSelector } from 'react-redux';\r\nimport { useAuthorisation } from '../hooks/useAuthorisation';\r\n\r\nconst StyledLayout = styled.div`\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${backgroundColor};\r\n  & > .page {\r\n    flex: 1 1;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    width: 100%;\r\n    height: calc(100% - 50px);\r\n    & > .content {\r\n      flex: 5 1 500px;\r\n      overflow-y: auto;\r\n      height: 100%;\r\n      & > * {\r\n        max-width: 1080px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function Layout() {\r\n  const user = useAuthorisation(state => state.user);\r\n  return (\r\n    <StyledLayout>\r\n      <Header>Spiral</Header>\r\n      <Switch>\r\n        <Route path=\"/login\">\r\n          <LoginPage />\r\n        </Route>\r\n        <Redirect exact path=\"/\" to=\"/login\"></Redirect>\r\n        {user && (\r\n          <div className=\"page\">\r\n            <NavPanel />\r\n            <main className=\"content\">\r\n              <Switch>\r\n                <Route path=\"/home\">\r\n                  <HomePage />\r\n                </Route>\r\n                <Route path=\"/accounts\"><NotImplementedPage /></Route>\r\n                <Route path=\"/giving\"><NotImplementedPage /></Route>\r\n                <Route path=\"/payments\"><NotImplementedPage /></Route>\r\n                <Route path=\"/cards\"><NotImplementedPage /></Route>\r\n              </Switch>\r\n            </main>\r\n          </div>\r\n        )}\r\n        <Redirect path=\"*\" to=\"/login\"></Redirect>\r\n      </Switch>\r\n    </StyledLayout>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport { Layout } from './components/Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Layout />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { connectRouter } from \"connected-react-router\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nexport default connectRouter(history);\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\nimport router from \"./router\";\r\n\r\nexport default combineReducers({\r\n  router,\r\n  user\r\n});\r\n","import {\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  LOGIN_SUCCEEDED\r\n} from \"../types\";\r\n\r\nconst defaultUser = null;\r\n\r\nexport default (state = defaultUser, { type, ...payload }) => {\r\n  switch (type) {\r\n    case LOGIN_SUCCEEDED:\r\n      return { ...state, ...payload };\r\n    case LOGIN_FAILED:\r\n      return state;\r\n    case LOGOUT:\r\n      return null;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { call, put, takeLatest } from \"redux-saga/effects\";\r\nimport {\r\n  LOGIN_REQUESTED,\r\n  LOGIN_SUCCEEDED,\r\n  LOGIN_FAILED,\r\n  LOGOUT\r\n} from \"../types\";\r\nimport { apiSevice } from \"../../services/api\";\r\n\r\nexport function* logIn() {\r\n  yield takeLatest(LOGIN_REQUESTED, function* ({ login, password }) {\r\n    try {\r\n      const user = yield call(() => apiSevice.logIn(login, password));\r\n      yield put({ type: LOGIN_SUCCEEDED, ...user });\r\n    } catch (e) {\r\n      yield put({ type: LOGIN_FAILED, message: e.message });\r\n    }\r\n  });\r\n}\r\n\r\nexport function* logOut() {\r\n  yield takeLatest(LOGOUT, function* () {\r\n    localStorage.removeItem('user');\r\n    yield null;\r\n  });\r\n}\r\n","import { all } from \"redux-saga/effects\";\r\nimport { logIn, logOut } from \"./user\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([logIn(), logOut()]);\r\n}\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport rootReducer from \"./reducers\";\r\nimport rootSaga from \"./sagas\";\r\nimport { history } from \"./reducers/router\";\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  compose(\r\n    applyMiddleware(routerMiddleware(history), sagaMiddleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport { history };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport { mainColor, greyColor, backgroundColor } from './styledConstants';\r\nimport store, { history } from \"./store/store\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst GlogalStyle = createGlobalStyle`\r\n  ::-webkit-scrollbar {\r\n    width: 8px;\r\n  }\r\n  \r\n  ::-webkit-scrollbar-track {\r\n    background-color: ${backgroundColor};\r\n  }\r\n  \r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: ${greyColor};\r\n    border-radius: 8px;\r\n    &:hover {\r\n      background-color: ${mainColor};\r\n    }\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlogalStyle />\r\n    <Provider store={store}>\r\n      <ConnectedRouter history={history}>\r\n        <App />\r\n      </ConnectedRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}